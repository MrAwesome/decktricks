General
[] switch checks over to https://docs.rs/predicates/latest/predicates/
    [] use them in a default trait method in TrickProvider?
[] Start writing unit tests
[] Pull command running logic over from ruwi? or will the "run as root" guardrails be too intense?
[] check out boilr for add-to-steam https://flathub.org/apps/io.github.philipk.boilr
[] 'available' command, which just shows all available actions for all available tricks
[] simple zenity frontend to test gui functionality
[] pipe command output into ActionSuccess
[] remove uses of eprintln and use a logger
[] implement reinstall for flatpak
[] remove all possible panics and return UnimplementedError instead (for GUI safety)
[] test in chimeraos and steamfork
[] grab SystemState once and use it for all checks (each TrickProvider can provide a get_relevant_system_state that it must read from. nicer separation of concerns for sure, and much faster for checks)

[] create better testing for uninstalled/installed and how it affects what's available for e.g. flatpak
[] figure out how to give specific error messages for things like "can't be run because it's not installed"

[] dependencies between tricks

Idea
[] web frontend that just constructs a list of desired tricks and generates a .desktop that installs decktricks cli and uses it to install everything in one go

CLI
[] just read config file once at start, calling function from lib.rs
[] colorize output, decide which bits of spawned program output to keep in which contexts
[] run: pass remaining args after cmdname or -- through to the run command

GUI
[] restart/refresh if config file hash changes?

Providers
[] https://github.com/moraroy/NonSteamLaunchers-On-Steam-Deck
    [] individual launchers from within this?
[] check out "setup helpers" in steamfork: https://github.com/SteamFork/SteamForkTools/tree/main/bin
     [] especially for Decky
