Providers
[] https://github.com/moraroy/NonSteamLaunchers-On-Steam-Deck
    [] individual launchers from within this?
[] check out "setup helpers" in steamfork: https://github.com/SteamFork/SteamForkTools/tree/main/bin
    [] especially for Decky
[] implement full updates for all providers
[] system commands - terminal, system-settings, file browser

Network/Updates
[] MOTD
[] Code updates
[] Config updates
[] GUI handling updates how?

General
[] unit test actions --json
[] using new command runner, add unit tests for general, gather, each provider, and top-level calls
[] remove all todo!, and panic!
[] implement all not_implemented
[] switch checks over to https://docs.rs/predicates/latest/predicates/
    [] use them in a default trait method in TrickProvider?
[] simple zenity frontend to test gui functionality
[] implement reinstall for flatpak
[] test in chimeraos and steamfork
[] fix up global updates - the logic on which providers run them, and how errors/messages are propagated/printed

[] create better testing for uninstalled/installed and how it affects what's available for e.g. flatpak
[] figure out how to give specific error messages for things like "can't be run because it's not installed"

[] dependencies between tricks

Code
[] Codemod for? to collect::<Result<_, _>>

Misc
[] check out boilr for add-to-steam https://flathub.org/apps/io.github.philipk.boilr

Idea
[] web frontend that just constructs a list of desired tricks and generates a .desktop that installs decktricks cli and uses it to install everything in one go
[] firefox, and ublock origin

CLI
[] colorize output, decide which bits of spawned program output to keep in which contexts
[] run: pass remaining args after cmdname or -- through to the run command

GUI
[] restart/refresh if config file hash changes?

Tips:
[] Use STEAM+Rstick to move mouse, STEAM+R2/R1/L2/L1 to click
